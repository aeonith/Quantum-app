name: Build QuantumCoin App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npx tsc --noEmit
    
    - name: Lint
      run: npx expo lint || echo "Linting skipped"
    
    - name: Run tests
      run: npm test || echo "Tests not implemented yet"

  build-web:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build web
      run: npx expo export --platform web
    
    - name: Upload web build
      uses: actions/upload-artifact@v4
      with:
        name: quantumcoin-web
        path: dist/

  build-android:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build Android AAB
      run: eas build --platform android --non-interactive --no-wait
      if: env.EXPO_TOKEN != ''
    
    - name: Build fallback (if no EAS)
      run: npx expo export --platform android
      if: env.EXPO_TOKEN == ''

  build-ios:
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build iOS IPA
      run: eas build --platform ios --non-interactive --no-wait
      if: env.EXPO_TOKEN != ''
    
    - name: Build fallback (if no EAS)
      run: npx expo export --platform ios
      if: env.EXPO_TOKEN == ''
